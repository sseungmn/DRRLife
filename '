from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtWebEngineWidgets import QWebEngineView
import folium, sys, glob, os, json, requests, io
import pandas as pd
import numpy as np
from Data import apiKeys as key

PATH = "./Data/"


class Map:
    src = glob.glob(os.path.join(PATH + "*.xlsx"))[0]
    data = pd.read_excel(src, sheet_name="대여소현황")

    dataset = data[["대여소_구", "대여소명", "대여소주소", "위도", "경도", "거치대수"]]

    src_songpa = dataset[dataset["대여소_구"].str.contains("송파구")]
    src_songpa.index = range(len(src_songpa))
    src_data_size = len(src_songpa)
    loc = [37.4952, 127.130]  # 송파구 기본좌표
    map_dr_songpa = folium.Map(location=loc, zoom_start=14)

    def __init__(self):
        pass

    def markStation(self):
        for i in range(self.src_data_size):
            folium.Marker(
                list(self.src_songpa.iloc[i][["위도", "경도"]]),
                popup=self.src_songpa.iloc[i][["대여소주소"]],
                icon=folium.Icon(color="green"),
            ).add_to(self.map_dr_songpa)

    # return list of location
    def find_location(self, address):
        URL = f"https://dapi.kakao.com/v2/local/search/keyword.json?query={address}"
        HEADERS = {"Authorization": f"KakaoAK {key.KAKAO_RESTAPI_KEY}"}
        places = requests.get(URL, headers=HEADERS).text
        jObject = json.loads(places).get("documents")[0]
        des = [jObject.get("x"), jObject.get("y")]
        return des

    # return pandas object of the closest station
    def find_closest(self, address):
        min_ = 10000
        val = 0
        now = self.find_location(address)

        for i in range(Map.src_data_size):
            temp = 100000 * np.sqrt(
                np.square(float(self.src_songpa.iloc[i][["위도"]] - float(now[1])))
                + np.square(float(self.src_songpa.iloc[i][["경도"]] - float(now[0])))
            )
            if min_ > temp:
                val = i
                min_ = temp
            return self.src_songpa.iloc[val]


if __name__ == "__main__":
    instanceMap = Map()
    _map = instanceMap.map_dr_songpa
    instanceMap.markStation()

    closest = instanceMap.find_closest("경찰병원역")
    print(closest)
    type(closest)
